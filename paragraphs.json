{"_default": {"1": {"text": "Kelvin Salton do Prado", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 22}, "2": {"text": "Nov 10, 2017\u00b78 min read", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 23}, "3": {"text": "Human beings perform face recognition automatically every day and practically with no effort.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 93}, "4": {"text": "Although it sounds like a very simple task for us, it has proven to be a complex task for a computer, as it has many variables that can impair the accuracy of the methods, for example: illumination variation, low resolution, occlusion, amongst other.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 250}, "5": {"text": "In computer science, face recognition is basically the task of recognizing a person based on its facial image. It has become very popular in the last two decades, mainly because of the new methods developed and the high quality of the current videos/cameras.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 258}, "6": {"text": "Note that face recognition is different of face detection:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 58}, "7": {"text": "The face recognition systems can operate basically in two modes:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 64}, "8": {"text": "There are different types of face recognition algorithms, for example:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 70}, "9": {"text": "Each method has a different approach to extract the image information and perform the matching with the input image. However, the methods Eigenfaces and Fisherfaces have a similar approach as well as the SIFT and SURF methods.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 226}, "10": {"text": "Today we gonna talk about one of the oldest (not the oldest one) and more popular face recognition algorithms: Local Binary Patterns Histograms (LBPH).", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 151}, "11": {"text": "The objective of this post is to explain the LBPH as simple as possible, showing the method step-by-step.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 105}, "12": {"text": "As it is one of the easier face recognition algorithms I think everyone can understand it without major difficulties.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 117}, "13": {"text": "Local Binary Pattern (LBP) is a simple yet very efficient texture operator which labels the pixels of an image by thresholding the neighborhood of each pixel and considers the result as a binary number.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 202}, "14": {"text": "It was first described in 1994 (LBP) and has since been found to be a powerful feature for texture classification. It has further been determined that when LBP is combined with histograms of oriented gradients (HOG) descriptor, it improves the detection performance considerably on some datasets.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 296}, "15": {"text": "Using the LBP combined with histograms we can represent the face images with a simple data vector.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 98}, "16": {"text": "As LBP is a visual descriptor it can also be used for face recognition tasks, as can be seen in the following step-by-step explanation.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 135}, "17": {"text": "Note: you can read more about the LBPH here: http://www.scholarpedia.org/article/Local_Binary_Patterns", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 102}, "18": {"text": "Now that we know a little more about face recognition and the LBPH, let\u2019s go further and see the steps of the algorithm:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 120}, "19": {"text": "Don\u2019t worry about the parameters right now, you will understand them after reading the next steps.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 98}, "20": {"text": "2. Training the Algorithm: First, we need to train the algorithm. To do so, we need to use a dataset with the facial images of the people we want to recognize. We need to also set an ID (it may be a number or the name of the person) for each image, so the algorithm will use this information to recognize an input image and give you an output. Images of the same person must have the same ID. With the training set already constructed, let\u2019s see the LBPH computational steps.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 475}, "21": {"text": "3. Applying the LBP operation: The first computational step of the LBPH is to create an intermediate image that describes the original image in a better way, by highlighting the facial characteristics. To do so, the algorithm uses a concept of a sliding window, based on the parameters radius and neighbors.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 307}, "22": {"text": "The image below shows this procedure:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 37}, "23": {"text": "Based on the image above, let\u2019s break it into several small steps so we can understand it easily:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 97}, "24": {"text": "It can be done by using bilinear interpolation. If some data point is between the pixels, it uses the values from the 4 nearest pixels (2x2) to estimate the value of the new data point.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 185}, "25": {"text": "4. Extracting the Histograms: Now, using the image generated in the last step, we can use the Grid X and Grid Y parameters to divide the image into multiple grids, as can be seen in the following image:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 202}, "26": {"text": "Based on the image above, we can extract the histogram of each region as follows:", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 81}, "27": {"text": "The LBPH algorithm is pretty much it.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 37}, "28": {"text": "5. Performing the face recognition: In this step, the algorithm is already trained. Each histogram created is used to represent each image from the training dataset. So, given an input image, we perform the steps again for this new image and creates a histogram which represents the image.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 289}, "29": {"text": "I am implementing the LBPH algorithm in Go programming language. The project is available on Github and is distributed under the MIT license, so feel free to contribute to the project (any contributions are welcome).Link to the project: https://github.com/kelvins/lbph", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 268}, "30": {"text": "Note: as mentioned in the conclusions, the LBPH is also provided by the OpenCV library. The OpenCV library can be used by many programming languages (e.g. C++, Python, Ruby, Matlab).", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 182}, "31": {"text": "If you liked this story please give it a clap. It motivates me to write more stories about face recognition.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 108}, "32": {"text": "Machine Learning Engineer and IPCV Researcher", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 45}, "33": {"text": "Every Thursday, the Variable delivers the very best of Towards Data Science: from hands-on tutorials and cutting-edge research to original features you don't want to miss.\u00a0Take a look.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 184}, "34": {"text": "By signing up, you will create a Medium account if you don\u2019t already have one. Review our Privacy Policy for more information about our privacy practices.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 154}, "35": {"text": "Check your inboxMedium sent you an email at  to complete your subscription.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 75}, "36": {"text": "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 83}, "37": {"text": "Get the Medium app", "link": "https://towardsdatascience.com/face-recognition-how-lbph-works-90ec258c3d6b", "size": 18}, "38": {"text": "You can be signed in via any or all of the methods shown below at the same time.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 80}, "39": {"text": "Sign in here to access free tools such as favourites and alerts, or to access personal subscriptions", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 100}, "40": {"text": "I don't have a profile", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 22}, "41": {"text": "I am signed in as:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 18}, "42": {"text": "With my free profile I can:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 27}, "43": {"text": "If you have access to journal content via a university, library or employer, sign in here", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 89}, "44": {"text": "Research off-campus without worrying about access issues. Find out about Lean Library here", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 90}, "45": {"text": "I am signed in via:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 19}, "46": {"text": "Research off-campus without worrying about access issues. Find out about Lean Library here", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 90}, "47": {"text": "With institutional access I can:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 32}, "48": {"text": "If you have access to journal via a society or associations, read the instructions below", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 88}, "49": {"text": "Access to society journal content varies across our titles.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 59}, "50": {"text": "If you have access to a journal via a society or association membership, please browse to your society journal, select an article to view, and follow the instructions in this box.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 179}, "51": {"text": "Contact us if you experience any difficulty logging in.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 55}, "52": {"text": "Some society journals require you to create a personal profile, then activate your society account", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 98}, "53": {"text": "I am signed in via:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 19}, "54": {"text": "With society access I can:", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 26}, "55": {"text": "Need Help?\u00a0Contact SAGE", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 23}, "56": {"text": "You are adding the following journals to your email alerts", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 58}, "57": {"text": "Did you struggle to get access to this article? This product could help you", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 75}, "58": {"text": "Accessing resources off campus can be a challenge. Lean Library can solve it", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 76}, "59": {"text": "\nIf you have the appropriate software installed, you can download article citation data to the citation manager of your choice. Simply select your manager software from the list below and click on download.\n", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 207}, "60": {"text": "\nIf you have the appropriate software installed, you can download article citation data to the citation manager of your choice. Simply select your manager software from the list below and click on download.\n", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 207}, "61": {"text": "Share this article via social media.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 36}, "62": {"text": "The e-mail addresses that you supply to use this service will not be used for any other purpose without your consent.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 117}, "63": {"text": "\nEmail a link to the following content:\n\n", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 41}, "64": {"text": "Sharing links are not available for this article.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 49}, "65": {"text": "For more information view the SAGE Journals Article Sharing page.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 65}, "66": {"text": "Create a link to share a read only version of this article with your colleagues and friends. For more information view the SAGE Journals Sharing page.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 150}, "67": {"text": "Please read and accept the terms and conditions and check the box to generate a sharing link.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 93}, "68": {"text": "I have read and accept the terms and conditions", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 47}, "69": {"text": "Explore More", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 12}, "70": {"text": "Providing security to the citizens is one of the most important and complex task for the governments around the world which they have to deal with. Street crimes and theft are the biggest threats for the citizens and their belonging. In order to provide security, there is an urgent need of a system that is capable of identifying the criminal in the crowded area. This paper proposes a facial recognition system using Local Binary Patterns Histogram Face recognizer mounted on drone technology. The facial recognition capability is a key feature for a drone to have in order to find or identify the person within the crowd. With the inception of drone technology in the proposed system, we can use it as a surveillance drone as well through which it can cover more area as compared to the stationary system. As soon as the system identifies the desired person, it tags him and transmits the image along with the co-ordinates of the location to the concerned authorities using mounted global positioning system. Proposed system is capable of identifying the person with the accuracy of approximately 89.1%.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1106}, "71": {"text": "It is a fact that the face is an inherited identity of a person. A system based on facial recognition system is more suitable for the people who are not willing to collaborate with other means of biometric identification system such as finger print, iris or hand scan. Most of the time, the culprits get away with their loot and there is no system to track them. With the help of an image processing application such as facial recognition, it is possible to introduce a system that is capable of identifying the person committing a crime and at the same time, alert the concerned authorities to take precautionary measures in order to apprehend him. Some other applications for facial recognition include audio-visual scrutiny and safety measures. It is a biometric recognition process, but it requires face instead of hand or fingers. Military organizations prefer facial recognition technologies instead of finger print or hand scan. Since the introduction of Artificial Intelligence (AI), facial recognition system has become a worthy tool for the application such as this one. It is becoming more and more popular among researchers around the world in many applications such as medical, engineering, security, and so on.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1224}, "72": {"text": "Facial recognition algorithm proposed by Cheng et al.1 introduces a deep sparse representation classifier to detect the facial features and identify the face of a person. Schools also introduced it for critical questions for specific students.2 Kadambari et al.3 also proposed a system that can take automatic attendance using facial recognition. Local Binary Patterns Histogram (LBPH) facial recognizer is a pre-trained facial recognition classifier capable of facial recognition, if enough dataset is available regarding the face that it needs to identify.4\u20136 Most real time applications use facial recognition algorithm that is in use of security companies or military organization around the world.7 Applications such as remote monitoring which are present over long distances often require a hardware platform like Raspberry Pi.8,9 Sharma and Jain,10 proposed a system to identify the faces using facial recognition for blind people. Over the year, researchers have utilized different algorithm for facial recognition such as Haar cascade, TPLBP/HOG Features, DBN Depth Model and Fisherface.11,12 For the security of ATM machine, facial recognition can play an important role for card authentication of a person.13 Researcher also uses neural network along with the sparse auto-encoder to train the model for facial recognition.14\u201316 Hsu and Chen17 discussed facial recognition mounted on a drone along with its limitation, in which the distance plays a major role to identify a person accurately. LBPH face recognizer can also trace and identify human action along with its dominant features and their classification.18,19", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1628}, "73": {"text": "This paper proposes an embedded system based on drone technology, which is capable of identifying a person using LBPH face recognizer. The mounted camera on the drone captures the frames in real time and identifies the target person. Usually for the security purpose, cameras are at certain location and they are stationary due to which they are unable to cover wide area. With the help of a drone technology (Quad copter), it gains the ability to hover and cover much more area. We can manually control it from a remote location or by simple follow waypoint that we fed to it. RF transceiver is also present along with the global positioning system (GPS) to communicate with the drone and send it instruction for the next waypoint.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 732}, "74": {"text": "This section offers some of the cutting-edge research into facial recognition technology using drones. Chen et al.20 developed a drone facial identification system using principal component analysis (PCA) and Kernel Correlation Filter (KCF) algorithms. Initially, an onboard camera captures a target frame. Then, the algorithm uses PCA method for face identification. Finally, KCF algorithm performs the target tracking. Afterward, the algorithm estimates the position error and sends it to the control system using the MavLink protocol, thus adjusting posture and finishing the tracking and monitoring task. The results prove the efficiency of the proposed system.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 665}, "75": {"text": "In another recent research on facial identification using drones, Herrera and Imamura21 offers a novel approach for facial recognition using deep learning. This study concentrates on the facial recognition of people with criminal backgrounds. It trains a neural network using the Caffe framework. The system uses the NVIDIA Jetson TX2 motherboard. Experimental results showcase the effectiveness of the proposed system.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 419}, "76": {"text": "Figure 1 represents the system block diagram. After system initialization, the drone will move to the location provided to it in a form of co-ordinates. Either RF transceiver sends these co-ordinates to the drone or we feed them initially. We can also control the drone manually if the need arises. If the drone identifies the target person, it will inform the concerned authority by transmitting an image displaying the identified person. Then, they can take control of the drone for manual tracking of the culprit.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 516}, "77": {"text": "Figure 1. Model of the Quad-copter used for the proposed system.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 64}, "78": {"text": "Mounted camera on the drone behaves as a sensory object through which it can detect or track the person. We use Raspberry Pi module to interface with the camera. It is necessary to use a camera with good aspect ratio and resolution for better accuracy and result. Camera captures a frame and applies Haar Cascade to detect the faces in the crowd using mounted Pi module. All the detected faces are cropped and LBPH face recognizer runs on each of the detected faces and compares it with the trained dataset. If the system identifies the desired person, it will tag him with his name and captures the frame. It also transmits the captured frame to the concerned authority to take appropriate action. In case the system detects no person in the frame, the drone will move to the next waypoint. We can also perform this process manually. The whole process repeats again at the new location where the drone just arrived. The mounted camera starts capturing new information while trying to detect the desired person. We propose Haar Cascade for the face detection process. It can also detect facial organs like eyes and mouth.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1121}, "79": {"text": "Using a drone is the most efficient and cost effective offering of this study. If the camera is stationary, then it will only be able to tag or identify the desired person within its proximity. The reason of choosing Raspberry Pi module as an on-board computer is its light weight and ability to perform complex operations such as image processing and machine learning. Since, the proposed model uses a machine learning algorithm (LBPH) face recognizer, it is an AI based application as well. Figure 1 represents the model of the Quad-copter used for the proposed application. It can carry up to 4\u2009pounds excluding its battery weight (Figure 2).", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 645}, "80": {"text": "Figure 2. System block representation.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 38}, "81": {"text": "Applications based of Machine learning such as facial recognition require a huge dataset for training before we implement them. Figure 3 represents the training model with LBPH face recognizer. The training dataset in this application contains four folders as displayed in Figure 4, which means that the trained model is capable of identifying four people. The names and Face ID of each person is given in Table 1. By increasing the exiting dataset, we can easily increase the number of people that we want to identify.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 519}, "82": {"text": "Figure 3. Training model for face recognition using LBPH face recognizer.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 73}, "83": {"text": "Figure 4. Training dataset of 4 people.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 39}, "84": {"text": "Table 1. Training dataset ID folders of 4 people for facial recognition.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 72}, "85": {"text": "Table 1. Training dataset ID folders of 4 people for facial recognition.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 72}, "86": {"text": "The algorithm resizes all the images in the folders into 225 x 225 resolution and converts them into grayscale format. The reason for doing this is to reduce the information because more information means more time it will take to train the model. After the grayscale conversion, we can use LBPH Face recognizer to train the dataset. It will generate a csv file, which is for testing purpose. Now, we implement the model in a real time application which is shown in Figure 5.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 475}, "87": {"text": "Figure 5. Implemented software model for facial recognition.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 60}, "88": {"text": "The algorithm captures the frame from the live video stream and passes it through the Haar cascade classifier for face detection. Haar cascade is a wavelet based machine learning algorithm that uses integral image concept in order to identify the features. It also uses Adaboost learning algorithm through which it can pick some important small set of features from a huge set for better classification.22 It is basically a pre-trained for face detection that is able to detect multiple faces in an image.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 505}, "89": {"text": "The algorithm crops and resizes all the detected faces from the frame to 225x225 resolution just as we did for the training dataset. It is imperative to resize the cropped images of the faces to the same resolution as the dataset. All the acquired face images from the frame passes through LBPH Face Recognizer to identify which images matches the dataset features. More the match, the better the confidence level will be. If the confidence level is above the required threshold for any of the image from the frame, that actually matches the features from the dataset of four people in Figure 3, then the algorithm tags that person\u2019s face with his or her name as shown is Table 1.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 680}, "90": {"text": "Since its discovery, LBPH is an excellent feature for the classification of certain textures like faces. It requires four distinct parameters to process an image, they are radius (r), neighbors (n), X-axis and Y-axis. Representation of (r) with respect to (n) is given in Table 2 where the highlighted area is a 3\u00d73 macro-block. Here X and Y-axis represents the dimensionality of the features grid in vertical and horizontal manner. The first step is to train the algorithm, and to do so, it is necessary to use correct dataset with facial images of the people that we need to identify. For the computational step, it is imperative to transform an image of a person into set of 3\u00d73 macro-block for better representation as given in Figure 6. By doing this, it is possible to pin point each and every feature that exist on a person\u2019s face. Each macro-block have 9 pixels and they have the range of 0 to 255 as they are of grayscale format.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 938}, "91": {"text": "Table 2. Representation of 3\u00d73 macro-block in an image.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 55}, "92": {"text": "Table 2. Representation of 3\u00d73 macro-block in an image.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 55}, "93": {"text": "Figure 6. 3\u00d73 macro-block representation.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 41}, "94": {"text": "The next step is to convert the macro-block into a binary pattern. The value of the center pixel is a threshold for the rest of its neighbors. Any value that is equal to or greater than 150 is set to 1 and if they are less, then they are set to 0 as given in Figure 6. The algorithm concatenates these binary information and places it in a clockwise pattern. This process is actually known as Linear Binary Pattern (LPB). Equation (1) also expresses LPB. N is the number of pixels except the center pixel. There are 8 neighbors of the center pixel with the radius (r) of 1. This macro-block becomes a sliding window and it applies on each 3\u00d73 pair individually. When equation (1) applies on the 3\u00d73 macro-block pattern, it transforms into the binary pattern with reference to the threshold or center pixel value. Equation (2) represents this phenomenon.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 853}, "95": {"text": "Figure 6 gives the matrix representation after the placement of each quantity using binary pattern in equation (2). The algorithm then multiplies it by the binary pattern and adds it to acquire LBP code. After acquiring LBP image, use equation (3) to gain a histogram representation of the image. Figure 7 displays the LBP converted image and its equivalent histogram. Each macro-block will generate its separate Histogram and in the end, the algorithm concatenates them all to generate a cumulative histogram of all macro-blocks present in an image", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 549}, "96": {"text": "Figure 7. (Left) gray scale image, (center) LBP image and (right) histogram of the LBP image.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 93}, "97": {"text": "The dataset of four different people is available for training. Figure 8 represents the samples of 4 images of four different people, for whom dataset is available. Each folder in Figure 3 contains 250 images which means there are 250 images stored for each person to train the model.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 284}, "98": {"text": "Figure 8. Four sample images of 4 people for the training dataset (Row 1: Ali Akbar Siddique, Row 2: Li Wang, Row 3: Wei Wang, Row 4: Zain Akbar Siddiqui).", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 155}, "99": {"text": "When the algorithm captures a frame from the live video stream, Haar cascade will detect all the faces in the frame as shown in Figure 9. The algorithm must crop all the detected faces for identification. Since the dataset contains images of 225 x 225 resolution, thus it is imperative to resize the cropped images into 225 x 225 resolution as well. After resizing, the algorithm converts these images into grayscale format. The reason for doing that is to reduce the information of these images by downsizing them into single dimension from three dimension. Figure 10 shows the five detected faces in grayscale format.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 619}, "100": {"text": "Figure 9. Face detection using Haar cascade classifier.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 55}, "101": {"text": "Figure 10. Detected faces in grayscale format.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 46}, "102": {"text": "Confidence level is an important parameter for identification, it basically calculates the probability that weather the desired parameter falls within the threshold range. If the confidence level is small, then it means that there is little difference between the two images, but we take an inversion to discard any confusion in the reader\u2019s mind. Now the confidence level points to the probability of the greatest value of the confidence level to identify the person in an image. This is apparent in Figure 11, where Haar cascade detected 5 faces and LBPH Face recognizer identifies the person in Figure 10 as Ali Akbar Siddique because his confidence level was 71% and the threshold value for the facial identification is set to 50%. In Figure 10, it is apparent that image (a) has a confidence level of 71% with folder ID: 0 and this folder has the images of Ali Akbar Siddiqui from Table 1. Similarly image (b) from Figure 10 has a confidence level of 4.8% with folder ID: 3, but it will not identify this person as the confidence level is below the threshold level. Some features of the input image will definitely match with images in the dataset hence the small value of the confidence level. Same applies to the rest of the images in Figure 10 which are images (c-d), their threshold values is less than the set threshold level.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1336}, "103": {"text": "Figure 11. Identification of a face through confidence level.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 61}, "104": {"text": "When the algorithm identifies the person in the frame, it tags him with his short name along with his confidence level like in Figure 12. Out of five faces, the system only identifies one person because the other four people were not in the training dataset. The proposed system can detect multiple people in a single frame provided that they are in the training dataset. Figure 13(a) and (b) are another sample of the algorithm identifying the person in an image. In this case, algorithm identifies Wei Wang with the confidence level of 78.2%. Figure 14 represents the accuracy of the trained dataset with respect to the application applied in real time. The value of epoch is set to 20 because it is unnecessary to increase its value as the accuracy will not get better and it will also require more computational resources and time to train. We also apply the same application using another well-known facial recognition algorithm, that is, Eigen faces. It uses a PCA to extract feature vectors from the designated image. This vector is flattened so that the entire feature vector is normalized. After the data train with same amount of images and epoch, its accuracy was approximately 82.4%.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1195}, "105": {"text": "Figure 12. Tagged person with the confidence level of 71.36%.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 61}, "106": {"text": "Figure 13. (a) Face detection. (b) Tagged person with the confidence level of 78.2%.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 84}, "107": {"text": "Figure 14. Trained dataset vs validation accuracy.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 50}, "108": {"text": "Face recognition systems basically belong to the category of image processing application and their importance is increasing fairly regularly. Mostly, these kinds of systems have applications in surveillance, personal verification and some other related security activities. The proposed system utilized the concept of facial recognition by using a pre-trained LBPH Face Recognizer to identify the person in the acquired frame. Drone mounted camera captured the live video stream. An onboard Raspberry Pi module processed the acquired video information. The system can detect the desired person with the accuracy of 89.1%. If we further increased the number of datasets, then the accuracy will also increase. We could also use the proposed system manually using RF transceiver in order to track the identified person if needed. We could also update the concerned authorities about the culprits\u2019 location at the same time using mounted GPS module. The proposed system can prove most beneficial to improve the existing security system.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 1033}, "109": {"text": "Declaration of conflicting interestsThe author(s) declared no potential conflicts of interest with respect to the research, authorship, and/or publication of this article.", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 171}, "110": {"text": "FundingThe author(s) disclosed receipt of the following financial support for the research, authorship, and/or publication of this article: National Natural Science Funds of China (Grant No. 61901350); Research Funds of Xi\u2019an Aeronautical University (Grant No. 2019KY0208).", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 273}, "111": {"text": "ORCID iDsLi Wang  https://orcid.org/0000-0002-8977-0137", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 55}, "112": {"text": "Ali Akbar Siddique  https://orcid.org/0000-0002-9641-7067", "link": "https://journals.sagepub.com/doi/full/10.1177/0020294020932344", "size": 57}, "113": {"text": "Please stand by, while we are checking your browser...", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 54}, "114": {"text": "Redirecting...", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 14}, "115": {"text": "Please enable Cookies and reload the page.", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 42}, "116": {"text": "Completing the CAPTCHA proves you are a human and gives you temporary access to the web property.", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 97}, "117": {"text": "If you are on a personal connection, like at home, you can run an anti-virus scan on your device to make sure it is not infected with malware.", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 142}, "118": {"text": "If you are at an office or shared network, you can ask the network administrator to run a scan across the network looking for misconfigured or infected devices.", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 160}, "119": {"text": "\nCloudflare Ray ID: 63c4c954cf2984bc\n\u2022\nYour IP: 79.126.10.152\n\u2022\nPerformance & security by Cloudflare\n", "link": "https://maker.pro/raspberry-pi/projects/how-to-create-a-facial-recognition-door-lock-with-raspberry-pi", "size": 101}, "120": {"text": "We use cookies to provide our customers with an optimal site experience. View our privacy notice and cookie notice to learn more about how we use cookies and how to manage your settings. By proceeding on our website you consent to the use of cookies.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 250}, "121": {"text": "The best tools to make your project dreams come true", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 52}, "122": {"text": "The face recognition-based phone unlocking system launched by Apple on its iPhones in 2017 took the world by storm and has been a disruptive technology since then in the smartphone industry. Similarly, home security, monitoring and automation devices have recently become an integral part of many people\u2019s lifestyle. A previous maker.io blog\u00a0explained the complete ecosystem, the common sensors in existing commercial products, and the common concepts for the maker community.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 476}, "123": {"text": "This project builds a door unlocking system using a face-recognition system as a password. It uses a Raspberry Pi 4 board along with a Raspberry Pi V2 camera module and with a 7-inch touch screen display for visualization and to configure the key faces.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 253}, "124": {"text": "Introducing the Project", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 23}, "125": {"text": "Computer vision technology has been an area of active research for decades because the possibilities of applications are innumerable. The common applications of computer vision and image processing include text recognition, depth perception, visual odometry, object detection and recognition, pose estimation, human face detection and recognition, among many others.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 366}, "126": {"text": "Detecting and recognizing objects in a camera\u2019s field of view is a very important task with applications in automation, robotics, and manufacturing industries.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 159}, "127": {"text": "The Difference Between Detecting and Recognizing a Face", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 55}, "128": {"text": "Face Detection is the application of image processing techniques to determine if the image is/has a human face or not. It is analogous to object detection, but the distinct and consistent features of the human face make face detection a more informed task achievable by hand-tuned feature descriptors and conventional image processing methods. Face detection is the precursor to face recognition. Face detection in a scene with multiple people or objects introduces challenges in localization of the bounding box for the face.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 526}, "129": {"text": "The basic idea behind this is to look for common features of the human face in the image. The common human face features include:", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 129}, "130": {"text": "While there are many more such features, a common human face detection alone is a moderately complex algorithm.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 111}, "131": {"text": "Face Recognition is a more complex task that needs to classify if the human face detected matches the faces the software has already seen. It is essentially an object-classification-cum-object-detection task for human faces. The additional complexities arise when the intent is to make the face recognition algorithm robust enough to work efficiently even on images with different orientations, partial views, variable expressions, and facial hair changes.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 456}, "132": {"text": "Common Techniques for Face Detection & Recognition", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 50}, "133": {"text": "The Viola-Jones algorithm for face detection using Haar Feature-based cascade classifier is a popular image processing technique. Histogram of Gradient (HOG)-based feature descriptors are widely used in the Haar cascade method. OpenCV, the largest open-source computer vision library, has an inbuilt implementation of the Haar Cascade-based face detection algorithm with a pre-trained classifier for human face classification.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 426}, "134": {"text": "Common feature detectors and their corresponding convolution on the human face (Image Source - OpenCV Tutorial Website)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 119}, "135": {"text": "A neural network is the most useful concept of machine learning that can learn to perform tasks based on training samples. Convolutional neural networks (CNNs), a supervised learning technique, use the concept of convolution of a feature detector over an input image to learn the common features descriptors in the image. A CNN is a type of deep neural network (a neural network with lots of constituent multi-perception layers) that has the potential to learn various features from multiple training images (labeled with classes) and, thus, can detect any incoming image belonging to any of the pre-trained image classes.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 622}, "136": {"text": "Project Outline", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 15}, "137": {"text": "The project uses deep learning techniques for face recognition, and if the observed face matches the key faces configured in the application, it sends a message out to the door to unlock. The application uses a Raspberry Pi camera module V2 to continuously observe live video feed and detect human faces in it. If the human face matches the configured key human face, then it unlocks the door.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 393}, "138": {"text": "The application trains itself using these images stored in the project folder annotated with the names of the person. If the image in the live feed has a face matching the trained image encodings, the password is accepted.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 222}, "139": {"text": "The complete application is developed in the Python programming language. Using off-the-shelf libraries for face recognition and the Python library for servo motor control, the complete project is implemented.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 209}, "140": {"text": "Face Recognition-based Door Unlocking System (Image Source - Original)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 70}, "141": {"text": "User Interface", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 14}, "142": {"text": "The user interface for the application is created using the PyQt5 library in Python. The GUI has a simple display where the live feed of the camera is presented, and the status of door locked or unlocked is also mentioned.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 222}, "143": {"text": "Users are encouraged to try updating the GUI with more features for automated new password face addition and different views in the UI.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 135}, "144": {"text": "Setting up the Hardware", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 23}, "145": {"text": "The hardware interfaces include the following steps:", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 52}, "146": {"text": "1. Connect the Raspberry Pi Camera Module V2 with the Raspberry Pi board using the 40 pin ribbon cable2. Connect the Touch Screen display board with the Raspberry Pi board using another 40 pin ribbon cable3. Connect the servo motor to the Raspberry Pi board using the GPIO pins", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 277}, "147": {"text": "a. Connect the servo motor\u2019s PWR and GND pins to the Vcc and GND pins on the RPib.Connect the signal pin to pin 17 of the RPi. Since the RPi uses software PWM, different pins can be used to generate the PWM signals for the motor.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 229}, "148": {"text": "4. Power up the Raspberry Pi board using an AC-DC power converter providing 5 V power", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 85}, "149": {"text": "Raspberry Pi Interfaced with the LCD Display (Image Source -Original)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 69}, "150": {"text": "Schematic for the connections (Image Source - Original Made in DK SchemeIt)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 75}, "151": {"text": "Setting up the Software", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 23}, "152": {"text": "The complete project is documented and codes are available in the GitHub repository here. The repository has all codes to reproduce the project. The code architecture is shown below.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 182}, "153": {"text": "Class Architecture for the Face Recognition Door Lock Project (Image Source - Original)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 87}, "154": {"text": "To configure the Raspberry Pi with the OS and install the appropriate LCD packages and kernel, refer to the docs folder in the code repository.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 143}, "155": {"text": "The most important libraries used in the project are:", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 53}, "156": {"text": "Execution Steps", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 15}, "157": {"text": "After setting up the hardware as shown above, execute the following steps to run the code and the project.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 106}, "158": {"text": "Working Example of the Program (Image Source - Original)", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 56}, "159": {"text": "Raspberry Pi is the favorite maker platform for single-board computers used by hobbyists and makers. While this project runs on a battery, ideally using a 5 V/1 A AC-DC power source is the most sustainable and cost-effective solution.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 234}, "160": {"text": "Human face detection and recognition have similarly been a very important topic for security and tracking operations. While the tools and algorithms used in this library are not as robust and safe as the commercial systems, it has a lot of potential to be a substitute with a few design and implementation tweaks (beyond the scope of this article). Users are encouraged to try enhancements to the project and let us know what you find!", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 435}, "161": {"text": "\u00a92020 Maker.io All Rights Reserved.  Maker.io and Digi-Key Electronics are not associated with any third party to which Maker.io links other than franchised suppliers.", "link": "https://www.digikey.be/en/maker/projects/raspberry-pi-face-recognition-based-door-lock/a4c71ade7f294a62bd8cd94a803df919", "size": 167}}}